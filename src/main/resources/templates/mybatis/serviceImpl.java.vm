package ${package.ServiceImpl};

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.mapper.Wrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import com.shipmap.framework.PageResult;
import com.shipmap.framework.exception.BusinessException;
import com.shipmap.framework.exception.ParameterException;
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import com.shipmap.framework.utils.StringUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.shipmap.modules.system.model.User;

import java.util.Date;
import java.util.List;
/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    @Autowired
    private ${entity}Mapper ${table.entityPath}Mapper;

    @Override
    public PageResult<${entity}> list(int pageNum, int pageSize, String column, String value) {
        Wrapper<${entity}> wrapper = new EntityWrapper<>();
        if (StringUtil.isNotBlank(column)) {
            wrapper.like(column, value);
        }
        Page<${entity}> ${table.entityPath}Page = new Page<>(pageNum, pageSize);
        List<${entity}> ${table.entityPath}List = baseMapper.selectPage(${table.entityPath}Page, wrapper);
        return new PageResult<>(${table.entityPath}Page.getTotal(), ${table.entityPath}List);
    }

    @Override
    public boolean add(${entity} ${table.entityPath}, User u) {

        return ${table.entityPath}Mapper.insert(${table.entityPath}) > 0;
    }

    @Override
    public boolean update(${entity} ${table.entityPath}, User u) {

        return ${table.entityPath}Mapper.updateById(${table.entityPath}) > 0;
    }

    @Override
    public ${entity} getById(String ${table.entityPath}Id) {
        return ${table.entityPath}Mapper.selectById(${table.entityPath}Id);
    }

    @Override
    public boolean delete(String ${table.entityPath}Id) {
        return ${table.entityPath}Mapper.deleteById(${table.entityPath}Id) > 0;
    }

}

